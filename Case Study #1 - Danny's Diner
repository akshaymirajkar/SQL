------- Q1. What is the total amount each customer spent at the restaurant?

SELECT customer_id, SUM(price) AS total_amount_spent
FROM sales s
INNER JOIN menu m 
ON s.product_id = m.product_id
GROUP BY customer_id

------- Q2. How many days has each customer visited the restaurant?

SELECT customer_id, COUNT(DISTINCT order_date) AS total_number_of_days_visited
FROM sales
GROUP BY customer_id

------- Q3. What was the first item from the menu purchased by each customer?

-- Solution 1
SELECT DISTINCT customer_id, product_name
FROM (SELECT customer_id, order_date, s.product_id, product_name, price,
DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY order_date) AS RANK
FROM sales s
INNER JOIN menu m 
ON s.product_id = m.product_id) a 
WHERE RANK = 1

-- Solution 2

SELECT DISTINCT customer_id, product_name
FROM sales s 
INNER JOIN menu m
ON s.product_id = m.product_id
WHERE order_date IN (SELECT MIN(order_date) AS date
FROM sales s
GROUP BY customer_id) 

------- Q4. What is the most purchased item on the menu and how many times was it purchased by all customers?

WITH CTE AS (SELECT TOP 1 product_id, COUNT(product_id) AS most_purchased_item
FROM sales
GROUP BY product_id
ORDER BY most_purchased_item DESC),
	
	CTE_2 AS (SELECT product_id
	FROM CTE)

				SELECT customer_id, product_name, COUNT(s.product_id) AS most_purchased_item
				FROM sales s
				INNER JOIN CTE_2
				ON s.product_id = CTE_2.product_id
				INNER JOIN menu m
				ON s.product_id = m.product_id
				GROUP BY customer_id, product_name

------- Q5. Which item was the most popular for each customer?

WITH CTE AS (SELECT customer_id, product_id, COUNT(product_id) AS total
FROM sales
GROUP BY customer_id, product_id),

	CTE_2 AS (SELECT customer_id, MAX(total) AS tots
			  FROM CTE
			  GROUP BY customer_id),

		CTE_3 AS	(SELECT s.customer_id, product_id, COUNT(product_id) AS total
				     FROM sales s
				     INNER JOIN CTE_2 ct
				     ON s.customer_id = ct.customer_id
				     GROUP BY s.customer_id, product_id, tots
				     HAVING COUNT(product_id) = ct.tots)

				     SELECT customer_id, ct.product_id, product_name
				     FROM CTE_3 ct
				     INNER JOIN menu m
				     ON ct.product_id = m.product_id
				     ORDER BY customer_id

------- Q6. Which item was purchased first by the customer after they became a member?

SELECT s.customer_id, product_name
FROM sales s
INNER JOIN members m 
ON s.customer_id = m.customer_id
INNER JOIN menu mm 
ON s.product_id = mm.product_id
WHERE m.join_date = s.order_date;

------- Q7. Which item was purchased just before the customer became a member?

SELECT DISTINCT product_name, s.customer_id
FROM sales s
INNER JOIN members m 
ON s.customer_id = m.customer_id
INNER JOIN menu mm 
ON s.product_id = mm.product_id
WHERE s.order_date < m.join_date
ORDER BY s.customer_id;

------- Q8. What is the total items and amount spent for each member before they became a member?
SELECT s.customer_id, COUNT(s.product_id) AS total_items, SUM(price) AS total_amount_spent
FROM sales s
INNER JOIN members m
ON s.customer_id = m.customer_id
INNER JOIN menu mm
ON s.product_id = mm.product_id
WHERE order_date < join_date
GROUP BY s.customer_id

------- BONUS QUESTIONS --------
-- Q1.) Recreate the following

SELECT customer_id, order_date, product_name, price,
CASE 
	WHEN order_date < join_date  OR join_date IS NULL THEN 'N'
	ELSE 'Y'
	END AS member
FROM (SELECT s.customer_id, order_date, product_name, price, join_date
FROM sales s
INNER JOIN menu m
ON s.product_id = m.product_id
LEFT JOIN members mm
ON s.customer_id = mm.customer_id) a 




