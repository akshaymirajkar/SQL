-- Q1.) Find Top 3 outlets by cuisine type without using limit and top function
WITH CTE_1 AS (SELECT *,
ROW_NUMBER() OVER (PARTITION BY cuisine ORDER BY total_orders DESC) AS top_outlets
FROM (SELECT cuisine, restaurant_id, COUNT(order_id) AS total_orders	 
FROM food_delivery_orders
GROUP BY cuisine, restaurant_id) a)

SELECT cuisine, restaurant_id
FROM CTE_1
WHERE top_outlets <=3

-- Q2.) Find the daily new customer count from the launch date (everyday how many new customers are we acquiring)
WITH CTE_1 AS (SELECT DISTINCT  Customer_code, CAST(MIN(placed_at) AS date) AS acquire_date
FROM food_delivery_orders
GROUP BY Customer_code),

	CTE_2 AS (SELECT Order_id, fdo.Customer_code, CAST(Placed_at AS date) AS order_placed_date, Restaurant_id, Cuisine, Order_status, Promo_code_Name, acquire_date
	FROM food_delivery_orders fdo
	INNER JOIN CTE_1 ct
	ON fdo.Customer_code = ct.Customer_code
	AND CAST(Placed_at AS date) = ct.acquire_date)

SELECT acquire_date, COUNT(*) AS daily_new_customer_count
FROM CTE_2
WHERE order_placed_date = acquire_date
GROUP BY acquire_date

-- Q3.) Find the count of all the users who were acquired in Jan 2025 and only placed one order in Jan and did not place any other order.
WITH CTE_1 AS (SELECT Customer_code, MIN(placed_at) AS acquire_date
FROM food_delivery_orders
GROUP BY Customer_code
)

SELECT customer_code
FROM (SELECT fdo.Customer_code, COUNT(*) AS total_no_of_customers
FROM food_delivery_orders fdo
INNER JOIN CTE_1 ct
ON fdo.Customer_code = ct.customer_code
WHERE MONTH(ct.acquire_date) = '01' AND fdo.Customer_code NOT IN (SELECT Customer_code
FROM food_delivery_orders
WHERE MONTH(Placed_at) <> '01')
GROUP BY fdo.Customer_code) a
WHERE total_no_of_customers = 1

-- Q4.) List all the customers with no orders in the last 7 days but were acquired one month ago with their first order on promo
SELECT DISTINCT customer_code, MIN(Placed_at) AS acquired_date
FROM food_delivery_orders
WHERE Customer_code NOT IN (SELECT DISTINCT customer_code
FROM food_delivery_orders
WHERE DATEDIFF(DAY, placed_at, GETDATE()) <=7) AND Promo_code_Name IS NOT NULL
GROUP BY Customer_code
HAVING DATEDIFF(MONTH, MIN(placed_at), GETDATE()) <=1

-- Q5.) Growth team is planning to create a trigger that will target customers after their every third order with a personalized message and they have asked you to create a query for this.
SELECT Customer_code, placed_at, order_number
FROM (SELECT *,
ROW_NUMBER() OVER (PARTITION BY customer_code ORDER BY placed_at) AS order_number
FROM food_delivery_orders) a
WHERE order_number % 3 = 0 AND CAST(Placed_at AS date) = CAST(GETDATE() AS date)
